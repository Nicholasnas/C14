name: Consulta CEP poetry

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  PYTHON_VERSION: "3.13" 

jobs:
 
  test:
    name: Executa os Testes
    runs-on: ubuntu-latest

    steps:
      - name: 1. Copia os arquivos do repositorio
        uses: actions/checkout@v3

      - name: 2. Instalar o python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
  
      - name: 3. Instalar Poetry 
        run: pip install poetry
          
      - name: 4. Instalar dependências
        run: poetry install
      
      - name: 5. Executar Testes
        run: |
          cd tests
          poetry run python -m unittest test_api.py -v

  build:
    name: Empacotamento (Build)
    runs-on: ubuntu-latest
    steps:
      - name: 1. Copia os arquivos do repositorio
        uses: actions/checkout@v3

      - name: 2. Instalar o python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 3. Instalar Poetry
        run: pip install poetry

      - name: 4. Empacotar o Projeto
        run: poetry build

      # Armazenar o Pacote como Artefato
      - name: 5. Upload do Pacote de Distribuição
        uses: actions/upload-artifact@v4
        with:
          name: Pacote-Distribuicao-CEP
          path: dist/

  notify:
    name: Notificação de Status
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
      - name: 1. Checkout do Código
        uses: actions/checkout@v4

      - name: 2. Dar Permissão de Execução ao Script
        run: chmod +x scripts/shell.sh

      - name: 3. Executar Script de Notificação
        run: sh scripts/shell.sh 
